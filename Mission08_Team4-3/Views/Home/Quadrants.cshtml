@model IEnumerable<Todos>

<h2>Task List</h2>

@if (Model.Any()) // Checks if there are any tasks to display
{
    <div class="row">
        @foreach (var task in Model)
        {
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">
                        @task.Quadrant
                    </div>
                    <div class="card-body">
                        <!-- Start of the row for task details and buttons -->
                        <div class="row">
                            <!-- Column for Task Details -->
                            <div class="col-md-8">
                                <p>@task.Task</p>
                                <p>Due Date: @task.Due_Date.ToShortDateString()</p>
                            </div>
                            <!-- Column for Buttons -->
                            <div class="col-md-4">
                                <form method="post" action="/Tasks/MarkAsCompleted" class="mb-2"> <!-- Assuming you have a MarkAsCompleted action -->
                                    <input type="hidden" name="taskId" value="@task.TaskId" />
                                    <button type="submit" class="btn btn-success w-100">Mark as Completed</button>
                                </form>
                                <a class="btn btn-info w-100 mb-2" asp-controller="Home" asp-action="Edit" asp-route-id="@task.TaskId">Edit</a>
                                <a class="btn btn-danger w-100" asp-controller="Home" asp-action="Delete" asp-route-id="@task.TaskId">Delete</a>
                            </div>
                        </div>
                        <!-- End of the row -->
                    </div>
                </div>
            </div>
            if ((Model.Where(t => !t.Completed).ToList().IndexOf(task) + 1) % 2 == 0) // Creates a new row every two cards
            {
                @:</div><div class="row">
            }
        }
    </div>
}
else
{
    <p>No tasks to display.</p>
}
